%!PS-Adobe-3.0 EPSF-3.0
%%Pages: 1
%%Title: (interactions.ps)
%%DocumentNeededResources: font Helvetica Courier
%%BoundingBox:  71 2 538 721
%%Creator: Blt_graph (Tk version 3.6)
%%CreationDate: Thu Jun 16 06:09:44 1994
%%EndComments


200 dict begin

/BgColorProc 0 def	% Background color procedure (for symbols)
/BorderProc 0 def	% Border outline procedure (for symbols)
/StippleProc 0 def	% Stipple procedure (for bar segments)
/DashesProc 0 def	% Dashes procedure (for line segments)


/encoding {ISOLatin1Encoding} def
systemdict /encodefont known {
    /realsetfont /setfont load def
    /setfont { encoding encodefont realsetfont } def
} if

/Stroke { gsave stroke grestore } def

/Fill { gsave fill grestore } def

/SetFont { 	% Stack: pointSize fontName
    findfont exch scalefont setfont
} def

/SetDashes {		% Stack: numDashes
    dup 0 eq { pop [] 0 setdash } { 1 array astore 0 setdash } ifelse
} def

/Box {			% Stack: x y width height
    newpath
        exch 4 2 roll moveto
        dup 0 rlineto
        exch 0 exch rlineto
        neg 0 rlineto
    closepath
} def

/SetFgColor {		% Stack: red green blue
    CL 0 eq { pop pop pop 0 0 0 } if
    setrgbcolor
    CL 1 eq { currentgray setgray } if
} def

/SetBgColor {		% Stack: red green blue
    CL 0 eq { pop pop pop 1 1 1 } if
    setrgbcolor
    CL 1 eq { currentgray setgray } if
} def

% The next two definitions are taken from "$tk_library/prolog.ps"

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string filled StippleFill --
%
% Given a path and other graphics information already set up, this
% procedure will fill the current path in a stippled fashion.  "String"
% contains a proper image description of the stipple pattern and
% "width" and "height" give its dimensions.  If "filled" is true then
% it means that the area to be stippled is gotten by filling the
% current path (e.g. the interior of a polygon); if it's false, the
% area is gotten by stroking the current path (e.g. a wide line).
% Each stipple dot is assumed to be about one unit across in the
% current user coordinate system.

/StippleFill {
    % Turn the path into a clip region that we can then cover with
    % lots of images corresponding to the stipple pattern.  Warning:
    % some Postscript interpreters get errors during strokepath for
    % dashed lines.  If this happens, turn off dashes and try again.

    gsave
    {eoclip}
    {{strokepath} stopped {grestore gsave [] 0 setdash strokepath} if clip}
    ifelse

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.

    pathbbox
    4 2 roll
    5 index div cvi 5 index mul 4 1 roll
    6 index div cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix {3 index} imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
    grestore
    newpath
} bind def

/DrawSegment {	% Stack: x1 y1 x2 y2
    newpath 4 2 roll moveto lineto stroke
} def

/DrawText {		% Stack: ?bgColorProc? boolean centerX centerY
			% 	 strWidth strHeight baseline theta str
    gsave
	7 -2 roll translate	% Translate to center of bounding box
	exch neg rotate		% Rotate by theta
	exch 4 2 roll
	2 copy 2 copy 2 copy

	% If needed, draw the background area, setting the bg color

	-0.5 mul exch -0.5 mul exch 4 -2 roll Box
        7 -1 roll { gsave 7 -1 roll exec fill grestore } if

	% Move to the text string starting position

	-.5  mul 5 -1 roll add exch -.5 mul exch moveto
	pop exch dup dup 4 2 roll

        % Adjust character widths to get desired overall string width
        % adjust X = (desired width - real width) / #chars

 	stringwidth pop sub exch length div 0 3 -1 roll

	% Flip back the scale so that the string is not drawn in reverse

	1 -1 scale
	ashow
    grestore
} def

/DrawBitmap {		% Stack: ?bgColorProc? boolean centerX centerY
			%	 width height theta imageStr
    gsave
	6 -2 roll translate	% Translate to center of bounding box
	4 1 roll neg rotate	% Rotate by theta

	% Find upperleft corner of bounding box

	2 copy -.5 mul exch -.5 mul exch translate
	2 copy scale		% Make pixel unit scale
        newpath
            0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto
        closepath

	% Fill rectangle with background color

	4 -1 roll { gsave 4 -1 roll exec fill grestore } if

	% Paint the image string into the unit rectangle

	2 copy true 3 -1 roll 0 0 5 -1 roll 0 0 6 array astore 5 -1 roll
        imagemask
    grestore
}def

% Symbols:

% Skinny-cross
/Sc {			% Stack: x y symbolSize
    gsave
	3 -2 roll translate 45 rotate
	0 0 3 -1 roll Sp
    grestore
} def

% Skinny-plus
/Sp {			% Stack: x y symbolSize
    gsave
	3 -2 roll translate
	2 idiv  	% Stack: radius
	dup 2 copy	% Stack: radius radius radius radius
	newpath neg 0 moveto 0 lineto
	gsave BgColorProc fill grestore stroke
	newpath neg 0 exch moveto 0 exch lineto
	gsave BgColorProc fill grestore stroke
    grestore
} def

% Cross
/Cr {			% Stack: x y symbolSize
    gsave
	3 -2 roll translate 45 rotate
	0 0 3 -1 roll Pl
    grestore
} def

% Plus
/Pl {			% Stack: x y symbolSize
    gsave
	3 -2 roll translate
	dup 2 idiv  	% Stack: size radius
	exch 6 idiv 	% Stack: radius delta

	%
	%          2   3	The plus/cross symbol is a
	%			closed polygon of 12 points.
	%      0   1   4    5	The diagram to the left
	%           x,y		represents the positions of
	%     11  10   7    6	the points which are computed
	%			below.
	%          9   8
	%

	newpath
	    2 copy exch neg exch neg moveto dup neg dup lineto
	    2 copy neg exch neg lineto 2 copy exch neg lineto
	    dup dup neg lineto 2 copy neg lineto 2 copy lineto
	    dup dup lineto 2 copy exch lineto 2 copy neg exch lineto
	    dup dup neg exch lineto exch neg exch lineto
	closepath
	Fill BorderProc
    grestore
} def

% Circle
/Ci {			% Stack: x y symbolSize
    3 copy pop
    moveto newpath
        2 div 0 360 arc
    closepath Fill BorderProc
} def

% Square
/Sq {			% Stack: x y symbolSize
    dup dup 2 div dup
    6 -1 roll exch sub exch
    5 -1 roll exch sub 4 -2 roll Box
    Fill BorderProc
} def

% Line
/Li {			% Stack: x y symbolSize
    3 1 roll exch 3 -1 roll 2 div 3 copy
    newpath
        sub exch moveto add exch lineto
    stroke
} def

% Diamond
/Di {			% Stack: x y symbolSize
    gsave
	3 1 roll translate 45 rotate 0 0 3 -1 roll Sq
    grestore
} def


%%BeginSetup
gsave			% Save the graphics state

% Default line style parameters

1 setlinewidth		% width
1 setlinejoin		% join
0 setlinecap		% cap
0 SetDashes		% dashes

% Adjust coordinate system to use X11 coordinates

0 792 translate
1 -1 scale

% User defined page layout

/CL 1 def
71 790 translate
-90 rotate
%%EndSetup

18 /Times-Roman SetFont
0.999985 0.999985 0.999985 SetBgColor  
9 38 686 353 Box Fill
gsave clip


% Element "kills"

0 0 0.999985 SetFgColor  
3 SetDashes
/DashesProc {
gsave
0.999985 0.999985 0.999985 SetBgColor  
0 SetDashes
stroke grestore
} def
1 setlinewidth
newpath 11 288 moveto
14 256 lineto
18 237 lineto
21 227 lineto
25 218 lineto
28 212 lineto
31 207 lineto
35 202 lineto
38 198 lineto
42 194 lineto
45 192 lineto
49 189 lineto
52 187 lineto
55 186 lineto
59 185 lineto
62 184 lineto
66 183 lineto
69 181 lineto
72 180 lineto
76 179 lineto
79 177 lineto
83 175 lineto
86 174 lineto
89 172 lineto
93 170 lineto
96 168 lineto
100 166 lineto
103 165 lineto
106 164 lineto
110 163 lineto
113 162 lineto
117 161 lineto
120 160 lineto
124 160 lineto
127 159 lineto
130 159 lineto
134 159 lineto
137 158 lineto
141 158 lineto
144 157 lineto
147 156 lineto
151 156 lineto
154 155 lineto
158 154 lineto
161 153 lineto
164 152 lineto
168 150 lineto
171 149 lineto
175 148 lineto
178 147 lineto
182 146 lineto
185 145 lineto
188 144 lineto
192 143 lineto
195 142 lineto
199 141 lineto
202 140 lineto
205 139 lineto
209 138 lineto
212 137 lineto
216 136 lineto
219 135 lineto
222 135 lineto
226 134 lineto
229 134 lineto
233 134 lineto
236 133 lineto
239 133 lineto
243 133 lineto
246 133 lineto
250 133 lineto
253 132 lineto
257 132 lineto
260 132 lineto
263 131 lineto
267 131 lineto
270 131 lineto
274 130 lineto
277 130 lineto
280 129 lineto
284 129 lineto
287 129 lineto
291 128 lineto
294 128 lineto
297 127 lineto
301 127 lineto
304 126 lineto
308 126 lineto
311 125 lineto
314 124 lineto
318 124 lineto
321 123 lineto
325 123 lineto
328 122 lineto
332 122 lineto
335 121 lineto
338 121 lineto
342 120 lineto
345 120 lineto
349 119 lineto
352 119 lineto
355 118 lineto
359 118 lineto
362 118 lineto
366 117 lineto
369 117 lineto
372 116 lineto
376 116 lineto
379 116 lineto
383 115 lineto
386 115 lineto
390 115 lineto
393 115 lineto
396 114 lineto
400 114 lineto
403 114 lineto
407 113 lineto
410 113 lineto
413 113 lineto
417 113 lineto
420 113 lineto
424 113 lineto
427 113 lineto
430 113 lineto
434 112 lineto
437 112 lineto
441 112 lineto
444 112 lineto
447 112 lineto
451 112 lineto
454 112 lineto
458 112 lineto
461 112 lineto
465 112 lineto
468 112 lineto
471 112 lineto
475 112 lineto
478 111 lineto
482 111 lineto
485 111 lineto
488 111 lineto
492 111 lineto
495 111 lineto
499 111 lineto
502 111 lineto
505 110 lineto
509 110 lineto
512 110 lineto
516 110 lineto
519 110 lineto
523 110 lineto
526 110 lineto
529 110 lineto
533 109 lineto
536 109 lineto
540 109 lineto
543 109 lineto
546 109 lineto
550 109 lineto
553 109 lineto
557 108 lineto
560 108 lineto
563 108 lineto
567 108 lineto
570 108 lineto
574 108 lineto
577 108 lineto
580 107 lineto
584 107 lineto
587 107 lineto
591 107 lineto
594 107 lineto
598 107 lineto
601 107 lineto
604 106 lineto
608 106 lineto
611 106 lineto
615 106 lineto
618 106 lineto
621 106 lineto
625 106 lineto
628 105 lineto
632 105 lineto
635 105 lineto
638 105 lineto
642 105 lineto
645 104 lineto
649 104 lineto
652 104 lineto
655 104 lineto
659 103 lineto
662 103 lineto
666 103 lineto
669 103 lineto
673 102 lineto
676 102 lineto
679 102 lineto
683 102 lineto
686 102 lineto
690 102 lineto
DashesProc stroke

% Element "mates"

0 0 0.999985 SetFgColor  
/DashesProc {} def
1 setlinewidth
newpath 11 389 moveto
14 389 lineto
18 389 lineto
21 389 lineto
25 389 lineto
28 389 lineto
31 389 lineto
35 389 lineto
38 389 lineto
42 389 lineto
45 368 lineto
49 368 lineto
52 368 lineto
55 368 lineto
59 368 lineto
62 368 lineto
66 368 lineto
69 368 lineto
72 368 lineto
76 368 lineto
79 368 lineto
83 368 lineto
86 368 lineto
89 347 lineto
93 340 lineto
96 340 lineto
100 340 lineto
103 340 lineto
106 340 lineto
110 340 lineto
113 340 lineto
117 340 lineto
120 340 lineto
124 330 lineto
127 330 lineto
130 330 lineto
134 330 lineto
137 330 lineto
141 326 lineto
144 319 lineto
147 316 lineto
151 314 lineto
154 311 lineto
158 301 lineto
161 297 lineto
164 297 lineto
168 289 lineto
171 288 lineto
175 287 lineto
178 283 lineto
182 281 lineto
185 276 lineto
188 276 lineto
192 276 lineto
195 275 lineto
199 272 lineto
202 269 lineto
205 268 lineto
209 267 lineto
212 266 lineto
216 265 lineto
219 264 lineto
222 263 lineto
226 262 lineto
229 261 lineto
233 260 lineto
236 259 lineto
239 258 lineto
243 256 lineto
246 255 lineto
250 254 lineto
253 254 lineto
257 254 lineto
260 253 lineto
263 252 lineto
267 252 lineto
270 251 lineto
274 250 lineto
277 249 lineto
280 248 lineto
284 247 lineto
287 246 lineto
291 245 lineto
294 244 lineto
297 244 lineto
301 243 lineto
304 243 lineto
308 242 lineto
311 242 lineto
314 241 lineto
318 241 lineto
321 241 lineto
325 241 lineto
328 241 lineto
332 241 lineto
335 241 lineto
338 241 lineto
342 241 lineto
345 241 lineto
349 241 lineto
352 241 lineto
355 241 lineto
359 240 lineto
362 240 lineto
366 239 lineto
369 239 lineto
372 238 lineto
376 237 lineto
379 236 lineto
383 234 lineto
386 233 lineto
390 231 lineto
393 229 lineto
396 228 lineto
400 225 lineto
403 223 lineto
407 220 lineto
410 217 lineto
413 214 lineto
417 211 lineto
420 209 lineto
424 207 lineto
427 205 lineto
430 203 lineto
434 202 lineto
437 200 lineto
441 199 lineto
444 198 lineto
447 197 lineto
451 196 lineto
454 195 lineto
458 194 lineto
461 194 lineto
465 193 lineto
468 192 lineto
471 191 lineto
475 191 lineto
478 190 lineto
482 190 lineto
485 189 lineto
488 189 lineto
492 188 lineto
495 188 lineto
499 188 lineto
502 188 lineto
505 187 lineto
509 187 lineto
512 186 lineto
516 185 lineto
519 185 lineto
523 184 lineto
526 184 lineto
529 184 lineto
533 184 lineto
536 183 lineto
540 183 lineto
543 183 lineto
546 183 lineto
550 182 lineto
553 182 lineto
557 182 lineto
560 182 lineto
563 181 lineto
567 181 lineto
570 181 lineto
574 181 lineto
577 181 lineto
580 181 lineto
584 181 lineto
587 180 lineto
591 180 lineto
594 180 lineto
598 180 lineto
601 180 lineto
604 180 lineto
608 180 lineto
611 180 lineto
615 180 lineto
618 180 lineto
621 180 lineto
625 180 lineto
628 180 lineto
632 179 lineto
635 179 lineto
638 179 lineto
642 179 lineto
645 179 lineto
649 179 lineto
652 179 lineto
655 179 lineto
659 179 lineto
662 179 lineto
666 179 lineto
669 179 lineto
673 179 lineto
676 179 lineto
679 179 lineto
683 179 lineto
686 179 lineto
690 179 lineto
DashesProc stroke

% Element "trades"

0 0 0.999985 SetFgColor  
5 SetDashes
/DashesProc {
gsave
0.999985 0.999985 0.999985 SetBgColor  
0 SetDashes
stroke grestore
} def
1 setlinewidth
newpath 11 297 moveto
14 280 lineto
18 266 lineto
21 257 lineto
25 251 lineto
28 247 lineto
31 245 lineto
35 244 lineto
38 243 lineto
42 241 lineto
45 239 lineto
49 238 lineto
52 238 lineto
55 238 lineto
59 238 lineto
62 237 lineto
66 236 lineto
69 236 lineto
72 235 lineto
76 234 lineto
79 234 lineto
83 233 lineto
86 233 lineto
89 232 lineto
93 232 lineto
96 231 lineto
100 231 lineto
103 231 lineto
106 231 lineto
110 230 lineto
113 230 lineto
117 230 lineto
120 229 lineto
124 229 lineto
127 229 lineto
130 229 lineto
134 228 lineto
137 228 lineto
141 228 lineto
144 228 lineto
147 228 lineto
151 228 lineto
154 228 lineto
158 227 lineto
161 227 lineto
164 227 lineto
168 227 lineto
171 227 lineto
175 227 lineto
178 227 lineto
182 227 lineto
185 227 lineto
188 227 lineto
192 227 lineto
195 227 lineto
199 227 lineto
202 227 lineto
205 227 lineto
209 227 lineto
212 227 lineto
216 227 lineto
219 227 lineto
222 227 lineto
226 227 lineto
229 227 lineto
233 226 lineto
236 226 lineto
239 226 lineto
243 225 lineto
246 225 lineto
250 225 lineto
253 224 lineto
257 224 lineto
260 224 lineto
263 223 lineto
267 222 lineto
270 222 lineto
274 221 lineto
277 220 lineto
280 219 lineto
284 218 lineto
287 217 lineto
291 215 lineto
294 214 lineto
297 212 lineto
301 210 lineto
304 210 lineto
308 210 lineto
311 209 lineto
314 209 lineto
318 209 lineto
321 209 lineto
325 209 lineto
328 209 lineto
332 209 lineto
335 208 lineto
338 208 lineto
342 207 lineto
345 207 lineto
349 206 lineto
352 205 lineto
355 205 lineto
359 204 lineto
362 204 lineto
366 204 lineto
369 203 lineto
372 203 lineto
376 203 lineto
379 203 lineto
383 203 lineto
386 203 lineto
390 203 lineto
393 202 lineto
396 202 lineto
400 202 lineto
403 202 lineto
407 201 lineto
410 201 lineto
413 201 lineto
417 201 lineto
420 201 lineto
424 200 lineto
427 200 lineto
430 200 lineto
434 200 lineto
437 199 lineto
441 199 lineto
444 199 lineto
447 198 lineto
451 198 lineto
454 198 lineto
458 198 lineto
461 197 lineto
465 197 lineto
468 197 lineto
471 197 lineto
475 197 lineto
478 197 lineto
482 197 lineto
485 196 lineto
488 196 lineto
492 196 lineto
495 196 lineto
499 196 lineto
502 196 lineto
505 196 lineto
509 196 lineto
512 195 lineto
516 195 lineto
519 195 lineto
523 194 lineto
526 194 lineto
529 194 lineto
533 194 lineto
536 194 lineto
540 193 lineto
543 193 lineto
546 193 lineto
550 193 lineto
553 192 lineto
557 192 lineto
560 192 lineto
563 191 lineto
567 191 lineto
570 191 lineto
574 190 lineto
577 190 lineto
580 189 lineto
584 189 lineto
587 188 lineto
591 188 lineto
594 187 lineto
598 187 lineto
601 186 lineto
604 186 lineto
608 185 lineto
611 184 lineto
615 183 lineto
618 182 lineto
621 182 lineto
625 181 lineto
628 180 lineto
632 179 lineto
635 178 lineto
638 177 lineto
642 176 lineto
645 176 lineto
649 175 lineto
652 175 lineto
655 174 lineto
659 174 lineto
662 173 lineto
666 173 lineto
669 173 lineto
673 172 lineto
676 172 lineto
679 172 lineto
683 172 lineto
686 171 lineto
690 171 lineto
DashesProc stroke

% Unset clipping
grestore

0.999985 0.999985 0.999985 SetBgColor  
0 0 719 38 Box Fill
0 38 9 353 Box Fill
695 38 24 353 Box Fill
0 391 719 76 Box Fill
18 /Times-Roman SetFont
0 0 0 SetFgColor  
false 352 19.5 220 19 15 0 (Cumulative Interaction Rates) DrawText
18 /Times-Roman SetFont
0 0 0 SetFgColor  
false 352 448.5 86 19 15 0 (Generation) DrawText
18 /Times-Roman SetFont
0 0 0 SetFgColor  
false 11 416.5 8 19 15 0 (0) DrawText
18 /Times-Roman SetFont
0 0 0 SetFgColor  
false 79.5 416.5 37 19 15 0 (1000) DrawText
18 /Times-Roman SetFont
0 0 0 SetFgColor  
false 147 416.5 36 19 15 0 (2000) DrawText
18 /Times-Roman SetFont
0 0 0 SetFgColor  
false 216 416.5 36 19 15 0 (3000) DrawText
18 /Times-Roman SetFont
0 0 0 SetFgColor  
false 284.5 416.5 35 19 15 0 (4000) DrawText
18 /Times-Roman SetFont
0 0 0 SetFgColor  
false 352 416.5 36 19 15 0 (5000) DrawText
18 /Times-Roman SetFont
0 0 0 SetFgColor  
false 420.5 416.5 35 19 15 0 (6000) DrawText
18 /Times-Roman SetFont
0 0 0 SetFgColor  
false 488 416.5 36 19 15 0 (7000) DrawText
18 /Times-Roman SetFont
0 0 0 SetFgColor  
false 557.5 416.5 35 19 15 0 (8000) DrawText
18 /Times-Roman SetFont
0 0 0 SetFgColor  
false 625.5 416.5 35 19 15 0 (9000) DrawText
18 /Times-Roman SetFont
0 0 0 SetFgColor  
false 693 416.5 46 19 15 0 (10000) DrawText
0 0 0 SetFgColor  
1 setlinewidth
0 SetDashes
693 394 11 394 DrawSegment
11 394 11 403 DrawSegment
79 394 79 403 DrawSegment
147 394 147 403 DrawSegment
216 394 216 403 DrawSegment
284 394 284 403 DrawSegment
352 394 352 403 DrawSegment
420 394 420 403 DrawSegment
488 394 488 403 DrawSegment
557 394 557 403 DrawSegment
625 394 625 403 DrawSegment
693 394 693 403 DrawSegment
showpage
%Trailer
grestore
end
%EOF
